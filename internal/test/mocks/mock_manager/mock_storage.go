// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/goquorum/quorum-plugin-hashicorp-account-store/internal/manager (interfaces: Storage)

// Package mock_manager is a generated GoMock package.
package mock_manager

import (
	accounts "github.com/ethereum/go-ethereum/accounts"
	common "github.com/ethereum/go-ethereum/common"
	gomock "github.com/golang/mock/gomock"
	config "github.com/goquorum/quorum-plugin-hashicorp-account-store/internal/config"
	manager "github.com/goquorum/quorum-plugin-hashicorp-account-store/internal/manager"
	reflect "reflect"
)

// MockStorage is a mock of Storage interface
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// GetKey mocks base method
func (m *MockStorage) GetKey(arg0 common.Address, arg1, arg2 string) (*manager.Key, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKey", arg0, arg1, arg2)
	ret0, _ := ret[0].(*manager.Key)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKey indicates an expected call of GetKey
func (mr *MockStorageMockRecorder) GetKey(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKey", reflect.TypeOf((*MockStorage)(nil).GetKey), arg0, arg1, arg2)
}

// JoinPath mocks base method
func (m *MockStorage) JoinPath(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "JoinPath", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// JoinPath indicates an expected call of JoinPath
func (mr *MockStorageMockRecorder) JoinPath(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "JoinPath", reflect.TypeOf((*MockStorage)(nil).JoinPath), arg0)
}

// StoreKey mocks base method
func (m *MockStorage) StoreKey(arg0 string, arg1 config.VaultSecretConfig, arg2 *manager.Key) (accounts.Account, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreKey", arg0, arg1, arg2)
	ret0, _ := ret[0].(accounts.Account)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// StoreKey indicates an expected call of StoreKey
func (mr *MockStorageMockRecorder) StoreKey(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreKey", reflect.TypeOf((*MockStorage)(nil).StoreKey), arg0, arg1, arg2)
}
