// Code generated by protoc-gen-go. DO NOT EDIT.
// source: signer.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Account struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{0}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Account) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type TxData struct {
	AccountNonce         uint64   `protobuf:"varint,1,opt,name=accountNonce,proto3" json:"accountNonce,omitempty"`
	Price                []byte   `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	GasLimit             uint64   `protobuf:"varint,3,opt,name=gasLimit,proto3" json:"gasLimit,omitempty"`
	Recipient            []byte   `protobuf:"bytes,4,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Amount               []byte   `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Payload              []byte   `protobuf:"bytes,6,opt,name=payload,proto3" json:"payload,omitempty"`
	V                    []byte   `protobuf:"bytes,7,opt,name=v,proto3" json:"v,omitempty"`
	R                    []byte   `protobuf:"bytes,8,opt,name=r,proto3" json:"r,omitempty"`
	S                    []byte   `protobuf:"bytes,9,opt,name=s,proto3" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxData) Reset()         { *m = TxData{} }
func (m *TxData) String() string { return proto.CompactTextString(m) }
func (*TxData) ProtoMessage()    {}
func (*TxData) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{1}
}

func (m *TxData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxData.Unmarshal(m, b)
}
func (m *TxData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxData.Marshal(b, m, deterministic)
}
func (m *TxData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxData.Merge(m, src)
}
func (m *TxData) XXX_Size() int {
	return xxx_messageInfo_TxData.Size(m)
}
func (m *TxData) XXX_DiscardUnknown() {
	xxx_messageInfo_TxData.DiscardUnknown(m)
}

var xxx_messageInfo_TxData proto.InternalMessageInfo

func (m *TxData) GetAccountNonce() uint64 {
	if m != nil {
		return m.AccountNonce
	}
	return 0
}

func (m *TxData) GetPrice() []byte {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *TxData) GetGasLimit() uint64 {
	if m != nil {
		return m.GasLimit
	}
	return 0
}

func (m *TxData) GetRecipient() []byte {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *TxData) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *TxData) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *TxData) GetV() []byte {
	if m != nil {
		return m.V
	}
	return nil
}

func (m *TxData) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *TxData) GetS() []byte {
	if m != nil {
		return m.S
	}
	return nil
}

type Transaction struct {
	TxData               *TxData  `protobuf:"bytes,1,opt,name=txData,proto3" json:"txData,omitempty"`
	Hash                 []byte   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Size                 float64  `protobuf:"fixed64,3,opt,name=size,proto3" json:"size,omitempty"`
	Address              []byte   `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{2}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetTxData() *TxData {
	if m != nil {
		return m.TxData
	}
	return nil
}

func (m *Transaction) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Transaction) GetSize() float64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Transaction) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

type StatusRequest struct {
	WalletUrl            string   `protobuf:"bytes,1,opt,name=walletUrl,proto3" json:"walletUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusRequest) Reset()         { *m = StatusRequest{} }
func (m *StatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()    {}
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{3}
}

func (m *StatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusRequest.Unmarshal(m, b)
}
func (m *StatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusRequest.Marshal(b, m, deterministic)
}
func (m *StatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRequest.Merge(m, src)
}
func (m *StatusRequest) XXX_Size() int {
	return xxx_messageInfo_StatusRequest.Size(m)
}
func (m *StatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusRequest proto.InternalMessageInfo

func (m *StatusRequest) GetWalletUrl() string {
	if m != nil {
		return m.WalletUrl
	}
	return ""
}

type StatusResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{4}
}

func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type OpenRequest struct {
	WalletUrl            string   `protobuf:"bytes,1,opt,name=walletUrl,proto3" json:"walletUrl,omitempty"`
	Passphrase           string   `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenRequest) Reset()         { *m = OpenRequest{} }
func (m *OpenRequest) String() string { return proto.CompactTextString(m) }
func (*OpenRequest) ProtoMessage()    {}
func (*OpenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{5}
}

func (m *OpenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenRequest.Unmarshal(m, b)
}
func (m *OpenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenRequest.Marshal(b, m, deterministic)
}
func (m *OpenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenRequest.Merge(m, src)
}
func (m *OpenRequest) XXX_Size() int {
	return xxx_messageInfo_OpenRequest.Size(m)
}
func (m *OpenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenRequest proto.InternalMessageInfo

func (m *OpenRequest) GetWalletUrl() string {
	if m != nil {
		return m.WalletUrl
	}
	return ""
}

func (m *OpenRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type OpenResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenResponse) Reset()         { *m = OpenResponse{} }
func (m *OpenResponse) String() string { return proto.CompactTextString(m) }
func (*OpenResponse) ProtoMessage()    {}
func (*OpenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{6}
}

func (m *OpenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenResponse.Unmarshal(m, b)
}
func (m *OpenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenResponse.Marshal(b, m, deterministic)
}
func (m *OpenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenResponse.Merge(m, src)
}
func (m *OpenResponse) XXX_Size() int {
	return xxx_messageInfo_OpenResponse.Size(m)
}
func (m *OpenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpenResponse proto.InternalMessageInfo

type CloseRequest struct {
	WalletUrl            string   `protobuf:"bytes,1,opt,name=walletUrl,proto3" json:"walletUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseRequest) Reset()         { *m = CloseRequest{} }
func (m *CloseRequest) String() string { return proto.CompactTextString(m) }
func (*CloseRequest) ProtoMessage()    {}
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{7}
}

func (m *CloseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRequest.Unmarshal(m, b)
}
func (m *CloseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRequest.Marshal(b, m, deterministic)
}
func (m *CloseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRequest.Merge(m, src)
}
func (m *CloseRequest) XXX_Size() int {
	return xxx_messageInfo_CloseRequest.Size(m)
}
func (m *CloseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRequest proto.InternalMessageInfo

func (m *CloseRequest) GetWalletUrl() string {
	if m != nil {
		return m.WalletUrl
	}
	return ""
}

type CloseResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseResponse) Reset()         { *m = CloseResponse{} }
func (m *CloseResponse) String() string { return proto.CompactTextString(m) }
func (*CloseResponse) ProtoMessage()    {}
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{8}
}

func (m *CloseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseResponse.Unmarshal(m, b)
}
func (m *CloseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseResponse.Marshal(b, m, deterministic)
}
func (m *CloseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseResponse.Merge(m, src)
}
func (m *CloseResponse) XXX_Size() int {
	return xxx_messageInfo_CloseResponse.Size(m)
}
func (m *CloseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloseResponse proto.InternalMessageInfo

type AccountsRequest struct {
	WalletUrl            string   `protobuf:"bytes,1,opt,name=walletUrl,proto3" json:"walletUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountsRequest) Reset()         { *m = AccountsRequest{} }
func (m *AccountsRequest) String() string { return proto.CompactTextString(m) }
func (*AccountsRequest) ProtoMessage()    {}
func (*AccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{9}
}

func (m *AccountsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountsRequest.Unmarshal(m, b)
}
func (m *AccountsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountsRequest.Marshal(b, m, deterministic)
}
func (m *AccountsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountsRequest.Merge(m, src)
}
func (m *AccountsRequest) XXX_Size() int {
	return xxx_messageInfo_AccountsRequest.Size(m)
}
func (m *AccountsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountsRequest proto.InternalMessageInfo

func (m *AccountsRequest) GetWalletUrl() string {
	if m != nil {
		return m.WalletUrl
	}
	return ""
}

type AccountsResponse struct {
	Accounts             []*Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AccountsResponse) Reset()         { *m = AccountsResponse{} }
func (m *AccountsResponse) String() string { return proto.CompactTextString(m) }
func (*AccountsResponse) ProtoMessage()    {}
func (*AccountsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{10}
}

func (m *AccountsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountsResponse.Unmarshal(m, b)
}
func (m *AccountsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountsResponse.Marshal(b, m, deterministic)
}
func (m *AccountsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountsResponse.Merge(m, src)
}
func (m *AccountsResponse) XXX_Size() int {
	return xxx_messageInfo_AccountsResponse.Size(m)
}
func (m *AccountsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AccountsResponse proto.InternalMessageInfo

func (m *AccountsResponse) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type ContainsRequest struct {
	WalletUrl            string   `protobuf:"bytes,1,opt,name=walletUrl,proto3" json:"walletUrl,omitempty"`
	Account              *Account `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainsRequest) Reset()         { *m = ContainsRequest{} }
func (m *ContainsRequest) String() string { return proto.CompactTextString(m) }
func (*ContainsRequest) ProtoMessage()    {}
func (*ContainsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{11}
}

func (m *ContainsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainsRequest.Unmarshal(m, b)
}
func (m *ContainsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainsRequest.Marshal(b, m, deterministic)
}
func (m *ContainsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainsRequest.Merge(m, src)
}
func (m *ContainsRequest) XXX_Size() int {
	return xxx_messageInfo_ContainsRequest.Size(m)
}
func (m *ContainsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContainsRequest proto.InternalMessageInfo

func (m *ContainsRequest) GetWalletUrl() string {
	if m != nil {
		return m.WalletUrl
	}
	return ""
}

func (m *ContainsRequest) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type ContainsResponse struct {
	IsContained          bool     `protobuf:"varint,1,opt,name=isContained,proto3" json:"isContained,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainsResponse) Reset()         { *m = ContainsResponse{} }
func (m *ContainsResponse) String() string { return proto.CompactTextString(m) }
func (*ContainsResponse) ProtoMessage()    {}
func (*ContainsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{12}
}

func (m *ContainsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainsResponse.Unmarshal(m, b)
}
func (m *ContainsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainsResponse.Marshal(b, m, deterministic)
}
func (m *ContainsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainsResponse.Merge(m, src)
}
func (m *ContainsResponse) XXX_Size() int {
	return xxx_messageInfo_ContainsResponse.Size(m)
}
func (m *ContainsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContainsResponse proto.InternalMessageInfo

func (m *ContainsResponse) GetIsContained() bool {
	if m != nil {
		return m.IsContained
	}
	return false
}

type SignHashRequest struct {
	WalletUrl            string   `protobuf:"bytes,1,opt,name=walletUrl,proto3" json:"walletUrl,omitempty"`
	Account              *Account `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Hash                 []byte   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignHashRequest) Reset()         { *m = SignHashRequest{} }
func (m *SignHashRequest) String() string { return proto.CompactTextString(m) }
func (*SignHashRequest) ProtoMessage()    {}
func (*SignHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{13}
}

func (m *SignHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignHashRequest.Unmarshal(m, b)
}
func (m *SignHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignHashRequest.Marshal(b, m, deterministic)
}
func (m *SignHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignHashRequest.Merge(m, src)
}
func (m *SignHashRequest) XXX_Size() int {
	return xxx_messageInfo_SignHashRequest.Size(m)
}
func (m *SignHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignHashRequest proto.InternalMessageInfo

func (m *SignHashRequest) GetWalletUrl() string {
	if m != nil {
		return m.WalletUrl
	}
	return ""
}

func (m *SignHashRequest) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *SignHashRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type SignHashResponse struct {
	Result               []byte   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignHashResponse) Reset()         { *m = SignHashResponse{} }
func (m *SignHashResponse) String() string { return proto.CompactTextString(m) }
func (*SignHashResponse) ProtoMessage()    {}
func (*SignHashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{14}
}

func (m *SignHashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignHashResponse.Unmarshal(m, b)
}
func (m *SignHashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignHashResponse.Marshal(b, m, deterministic)
}
func (m *SignHashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignHashResponse.Merge(m, src)
}
func (m *SignHashResponse) XXX_Size() int {
	return xxx_messageInfo_SignHashResponse.Size(m)
}
func (m *SignHashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignHashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignHashResponse proto.InternalMessageInfo

func (m *SignHashResponse) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

type SignTxRequest struct {
	WalletUrl            string       `protobuf:"bytes,1,opt,name=walletUrl,proto3" json:"walletUrl,omitempty"`
	Account              *Account     `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Tx                   *Transaction `protobuf:"bytes,3,opt,name=tx,proto3" json:"tx,omitempty"`
	ChainID              []byte       `protobuf:"bytes,4,opt,name=chainID,proto3" json:"chainID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SignTxRequest) Reset()         { *m = SignTxRequest{} }
func (m *SignTxRequest) String() string { return proto.CompactTextString(m) }
func (*SignTxRequest) ProtoMessage()    {}
func (*SignTxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{15}
}

func (m *SignTxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTxRequest.Unmarshal(m, b)
}
func (m *SignTxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTxRequest.Marshal(b, m, deterministic)
}
func (m *SignTxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTxRequest.Merge(m, src)
}
func (m *SignTxRequest) XXX_Size() int {
	return xxx_messageInfo_SignTxRequest.Size(m)
}
func (m *SignTxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignTxRequest proto.InternalMessageInfo

func (m *SignTxRequest) GetWalletUrl() string {
	if m != nil {
		return m.WalletUrl
	}
	return ""
}

func (m *SignTxRequest) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *SignTxRequest) GetTx() *Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *SignTxRequest) GetChainID() []byte {
	if m != nil {
		return m.ChainID
	}
	return nil
}

type SignTxResponse struct {
	Tx                   *Transaction `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SignTxResponse) Reset()         { *m = SignTxResponse{} }
func (m *SignTxResponse) String() string { return proto.CompactTextString(m) }
func (*SignTxResponse) ProtoMessage()    {}
func (*SignTxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{16}
}

func (m *SignTxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTxResponse.Unmarshal(m, b)
}
func (m *SignTxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTxResponse.Marshal(b, m, deterministic)
}
func (m *SignTxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTxResponse.Merge(m, src)
}
func (m *SignTxResponse) XXX_Size() int {
	return xxx_messageInfo_SignTxResponse.Size(m)
}
func (m *SignTxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignTxResponse proto.InternalMessageInfo

func (m *SignTxResponse) GetTx() *Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

type SignHashWithPassphraseRequest struct {
	WalletUrl            string   `protobuf:"bytes,1,opt,name=walletUrl,proto3" json:"walletUrl,omitempty"`
	Account              *Account `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Hash                 []byte   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Passphrase           string   `protobuf:"bytes,4,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignHashWithPassphraseRequest) Reset()         { *m = SignHashWithPassphraseRequest{} }
func (m *SignHashWithPassphraseRequest) String() string { return proto.CompactTextString(m) }
func (*SignHashWithPassphraseRequest) ProtoMessage()    {}
func (*SignHashWithPassphraseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{17}
}

func (m *SignHashWithPassphraseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignHashWithPassphraseRequest.Unmarshal(m, b)
}
func (m *SignHashWithPassphraseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignHashWithPassphraseRequest.Marshal(b, m, deterministic)
}
func (m *SignHashWithPassphraseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignHashWithPassphraseRequest.Merge(m, src)
}
func (m *SignHashWithPassphraseRequest) XXX_Size() int {
	return xxx_messageInfo_SignHashWithPassphraseRequest.Size(m)
}
func (m *SignHashWithPassphraseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignHashWithPassphraseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignHashWithPassphraseRequest proto.InternalMessageInfo

func (m *SignHashWithPassphraseRequest) GetWalletUrl() string {
	if m != nil {
		return m.WalletUrl
	}
	return ""
}

func (m *SignHashWithPassphraseRequest) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *SignHashWithPassphraseRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *SignHashWithPassphraseRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type SignTxWithPassphraseRequest struct {
	WalletUrl            string       `protobuf:"bytes,1,opt,name=walletUrl,proto3" json:"walletUrl,omitempty"`
	Account              *Account     `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Tx                   *Transaction `protobuf:"bytes,3,opt,name=tx,proto3" json:"tx,omitempty"`
	ChainID              []byte       `protobuf:"bytes,4,opt,name=chainID,proto3" json:"chainID,omitempty"`
	Passphrase           string       `protobuf:"bytes,5,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SignTxWithPassphraseRequest) Reset()         { *m = SignTxWithPassphraseRequest{} }
func (m *SignTxWithPassphraseRequest) String() string { return proto.CompactTextString(m) }
func (*SignTxWithPassphraseRequest) ProtoMessage()    {}
func (*SignTxWithPassphraseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df2490657d73dbfd, []int{18}
}

func (m *SignTxWithPassphraseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTxWithPassphraseRequest.Unmarshal(m, b)
}
func (m *SignTxWithPassphraseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTxWithPassphraseRequest.Marshal(b, m, deterministic)
}
func (m *SignTxWithPassphraseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTxWithPassphraseRequest.Merge(m, src)
}
func (m *SignTxWithPassphraseRequest) XXX_Size() int {
	return xxx_messageInfo_SignTxWithPassphraseRequest.Size(m)
}
func (m *SignTxWithPassphraseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTxWithPassphraseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignTxWithPassphraseRequest proto.InternalMessageInfo

func (m *SignTxWithPassphraseRequest) GetWalletUrl() string {
	if m != nil {
		return m.WalletUrl
	}
	return ""
}

func (m *SignTxWithPassphraseRequest) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *SignTxWithPassphraseRequest) GetTx() *Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *SignTxWithPassphraseRequest) GetChainID() []byte {
	if m != nil {
		return m.ChainID
	}
	return nil
}

func (m *SignTxWithPassphraseRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

func init() {
	proto.RegisterType((*Account)(nil), "proto.Account")
	proto.RegisterType((*TxData)(nil), "proto.TxData")
	proto.RegisterType((*Transaction)(nil), "proto.Transaction")
	proto.RegisterType((*StatusRequest)(nil), "proto.StatusRequest")
	proto.RegisterType((*StatusResponse)(nil), "proto.StatusResponse")
	proto.RegisterType((*OpenRequest)(nil), "proto.OpenRequest")
	proto.RegisterType((*OpenResponse)(nil), "proto.OpenResponse")
	proto.RegisterType((*CloseRequest)(nil), "proto.CloseRequest")
	proto.RegisterType((*CloseResponse)(nil), "proto.CloseResponse")
	proto.RegisterType((*AccountsRequest)(nil), "proto.AccountsRequest")
	proto.RegisterType((*AccountsResponse)(nil), "proto.AccountsResponse")
	proto.RegisterType((*ContainsRequest)(nil), "proto.ContainsRequest")
	proto.RegisterType((*ContainsResponse)(nil), "proto.ContainsResponse")
	proto.RegisterType((*SignHashRequest)(nil), "proto.SignHashRequest")
	proto.RegisterType((*SignHashResponse)(nil), "proto.SignHashResponse")
	proto.RegisterType((*SignTxRequest)(nil), "proto.SignTxRequest")
	proto.RegisterType((*SignTxResponse)(nil), "proto.SignTxResponse")
	proto.RegisterType((*SignHashWithPassphraseRequest)(nil), "proto.SignHashWithPassphraseRequest")
	proto.RegisterType((*SignTxWithPassphraseRequest)(nil), "proto.SignTxWithPassphraseRequest")
}

func init() { proto.RegisterFile("signer.proto", fileDescriptor_df2490657d73dbfd) }

var fileDescriptor_df2490657d73dbfd = []byte{
	// 713 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0x1b, 0xc7, 0x49, 0x26, 0xce, 0x8f, 0x96, 0x50, 0xac, 0xf0, 0xa3, 0x6a, 0x05, 0x52,
	0x54, 0x41, 0x2b, 0x85, 0xf6, 0x54, 0x09, 0x09, 0xb5, 0x07, 0x10, 0x88, 0x1f, 0x37, 0xa8, 0xe2,
	0xb8, 0x38, 0xab, 0xc6, 0x92, 0x6b, 0x1b, 0xef, 0x26, 0x04, 0xde, 0x83, 0x13, 0xef, 0xc2, 0x85,
	0x97, 0xe0, 0x71, 0x90, 0x77, 0xc7, 0x76, 0xec, 0x04, 0x14, 0x89, 0xc2, 0x29, 0x9e, 0x6f, 0xf7,
	0x9b, 0x99, 0x6f, 0x76, 0x66, 0x02, 0xb6, 0xf0, 0x2f, 0x43, 0x9e, 0x1c, 0xc4, 0x49, 0x24, 0x23,
	0x52, 0x57, 0x3f, 0xf4, 0x18, 0x1a, 0x4f, 0x3d, 0x2f, 0x9a, 0x87, 0x92, 0x38, 0xd0, 0x60, 0xd3,
	0x69, 0xc2, 0x85, 0x70, 0x8c, 0x3d, 0x63, 0x64, 0xbb, 0x99, 0x49, 0xfa, 0x50, 0x9b, 0x27, 0x81,
	0xb3, 0xb3, 0x67, 0x8c, 0x5a, 0x6e, 0xfa, 0x49, 0x7f, 0x1a, 0x60, 0x4d, 0x96, 0x67, 0x4c, 0x32,
	0x42, 0xc1, 0x66, 0xda, 0xc3, 0xab, 0x28, 0xf4, 0xb8, 0xe2, 0x9a, 0x6e, 0x09, 0x23, 0x03, 0xa8,
	0xc7, 0x89, 0xef, 0x71, 0xe5, 0xc2, 0x76, 0xb5, 0x41, 0x86, 0xd0, 0xbc, 0x64, 0xe2, 0xa5, 0x7f,
	0xe5, 0x4b, 0xa7, 0xa6, 0x58, 0xb9, 0x4d, 0xee, 0x40, 0x2b, 0xe1, 0x9e, 0x1f, 0xfb, 0x3c, 0x94,
	0x8e, 0xa9, 0x58, 0x05, 0x40, 0x76, 0xc1, 0x62, 0x57, 0xa9, 0x7b, 0xa7, 0xae, 0x8e, 0xd0, 0x4a,
	0x25, 0xc4, 0xec, 0x73, 0x10, 0xb1, 0xa9, 0x63, 0x69, 0x09, 0x68, 0x12, 0x1b, 0x8c, 0x85, 0xd3,
	0x50, 0x98, 0xb1, 0x48, 0xad, 0xc4, 0x69, 0x6a, 0x2b, 0x49, 0x2d, 0xe1, 0xb4, 0xb4, 0x25, 0xe8,
	0x02, 0xda, 0x93, 0x84, 0x85, 0x82, 0x79, 0xd2, 0x8f, 0x42, 0xf2, 0x00, 0x2c, 0xa9, 0x84, 0x2a,
	0x61, 0xed, 0x71, 0x47, 0xd7, 0xef, 0x40, 0xab, 0x77, 0xf1, 0x90, 0x10, 0x30, 0x67, 0x4c, 0xcc,
	0x50, 0xa0, 0xfa, 0x4e, 0x31, 0xe1, 0x7f, 0xe1, 0x4a, 0x9b, 0xe1, 0xaa, 0xef, 0xd5, 0x22, 0x9b,
	0xa5, 0x22, 0xd3, 0x47, 0xd0, 0x39, 0x97, 0x4c, 0xce, 0x85, 0xcb, 0x3f, 0xce, 0xb9, 0x50, 0x25,
	0xf8, 0xc4, 0x82, 0x80, 0xcb, 0x77, 0x49, 0xa0, 0x82, 0xb7, 0xdc, 0x02, 0xa0, 0x23, 0xe8, 0x66,
	0xd7, 0x45, 0x1c, 0x85, 0x82, 0xa7, 0x45, 0x11, 0x0a, 0xc1, 0xcb, 0x68, 0xd1, 0x17, 0xd0, 0x7e,
	0x1d, 0xf3, 0x70, 0x2b, 0xb7, 0xe4, 0x1e, 0x40, 0xcc, 0x84, 0x88, 0x67, 0x09, 0x13, 0x1c, 0x5f,
	0x7c, 0x05, 0xa1, 0x5d, 0xb0, 0xb5, 0x33, 0x1d, 0x94, 0x3e, 0x04, 0xfb, 0x34, 0x88, 0x04, 0xdf,
	0x2e, 0xe9, 0x1e, 0x74, 0xf0, 0x36, 0xd2, 0x0f, 0xa1, 0x87, 0xed, 0xb7, 0xa5, 0xec, 0x27, 0xd0,
	0x2f, 0x08, 0x28, 0x7c, 0x1f, 0x9a, 0xd8, 0x6d, 0xa9, 0xf4, 0xda, 0xa8, 0x3d, 0xee, 0xe2, 0x23,
	0xe1, 0x55, 0x37, 0x3f, 0xa7, 0xef, 0xa1, 0x77, 0x1a, 0x85, 0x92, 0xf9, 0xe1, 0x76, 0x01, 0xc9,
	0x08, 0x1a, 0x48, 0x56, 0xd5, 0x58, 0xf7, 0x9d, 0x1d, 0xd3, 0x23, 0xe8, 0x17, 0xae, 0x31, 0xb5,
	0x3d, 0x68, 0xfb, 0x02, 0x51, 0x3e, 0x55, 0xde, 0x9b, 0xee, 0x2a, 0x44, 0xaf, 0xa0, 0x77, 0xee,
	0x5f, 0x86, 0xcf, 0x98, 0x98, 0x5d, 0x73, 0x42, 0x79, 0x4f, 0xd6, 0x8a, 0x9e, 0xa4, 0xfb, 0xd0,
	0x2f, 0xc2, 0x15, 0x8d, 0x93, 0x70, 0x31, 0x0f, 0x24, 0xce, 0x3d, 0x5a, 0xf4, 0xab, 0x01, 0x9d,
	0xf4, 0xf2, 0x64, 0x79, 0xdd, 0x99, 0x51, 0xd8, 0x91, 0x4b, 0x95, 0x57, 0x7b, 0x4c, 0xb2, 0x81,
	0x2a, 0x86, 0xce, 0xdd, 0x91, 0xcb, 0x74, 0x52, 0xbc, 0x19, 0xf3, 0xc3, 0xe7, 0x67, 0xd9, 0xa4,
	0xa0, 0x49, 0x8f, 0xa0, 0x9b, 0xa5, 0x85, 0x0a, 0xb4, 0x3f, 0xe3, 0x4f, 0xfe, 0xe8, 0x37, 0x03,
	0xee, 0x66, 0xd2, 0x2f, 0x7c, 0x39, 0x7b, 0x93, 0x37, 0xf5, 0x7f, 0xa8, 0x7b, 0x65, 0xae, 0xcc,
	0xb5, 0xb9, 0xfa, 0x61, 0xc0, 0x6d, 0x2d, 0xea, 0xdf, 0xe6, 0xf6, 0x57, 0x95, 0xaf, 0xa8, 0xa8,
	0x57, 0x55, 0x8c, 0xbf, 0x9b, 0x60, 0x9d, 0xab, 0x7f, 0x19, 0x72, 0x0c, 0x96, 0xde, 0x4f, 0x64,
	0x80, 0x61, 0x4a, 0xdb, 0x6d, 0x78, 0xb3, 0x82, 0xe2, 0x4b, 0x1e, 0x82, 0x99, 0xee, 0x17, 0x92,
	0xe5, 0xb6, 0xb2, 0xb9, 0x86, 0x37, 0x4a, 0x18, 0x12, 0xc6, 0x50, 0x57, 0x2b, 0x85, 0x64, 0xa7,
	0xab, 0xeb, 0x68, 0x38, 0x28, 0x83, 0xc8, 0x39, 0x81, 0x66, 0xb6, 0x44, 0xc8, 0x6e, 0xb9, 0x52,
	0x79, 0x7e, 0xb7, 0xd6, 0xf0, 0x82, 0x9c, 0x8d, 0x79, 0x4e, 0xae, 0xac, 0x94, 0x9c, 0xbc, 0xb6,
	0x0f, 0x4e, 0xa0, 0x99, 0xf5, 0x60, 0x4e, 0xae, 0x8c, 0x7f, 0x4e, 0x5e, 0x9b, 0xd3, 0x63, 0x5d,
	0xdc, 0xc9, 0xb2, 0x28, 0xe9, 0xea, 0x74, 0x16, 0x25, 0x2d, 0x0f, 0xc7, 0x05, 0xec, 0x6e, 0xee,
	0x7b, 0x72, 0xbf, 0x12, 0x69, 0x63, 0xeb, 0xfd, 0x3e, 0x9f, 0xb7, 0x30, 0xd8, 0xd4, 0xb2, 0x84,
	0x96, 0xf2, 0xd8, 0xec, 0x74, 0x73, 0xae, 0x1f, 0x2c, 0x85, 0x3e, 0xfe, 0x15, 0x00, 0x00, 0xff,
	0xff, 0x6d, 0xfd, 0xaf, 0xe0, 0xac, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SignerClient is the client API for Signer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SignerClient interface {
	Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	Open(ctx context.Context, in *OpenRequest, opts ...grpc.CallOption) (*OpenResponse, error)
	Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseResponse, error)
	Accounts(ctx context.Context, in *AccountsRequest, opts ...grpc.CallOption) (*AccountsResponse, error)
	Contains(ctx context.Context, in *ContainsRequest, opts ...grpc.CallOption) (*ContainsResponse, error)
	SignHash(ctx context.Context, in *SignHashRequest, opts ...grpc.CallOption) (*SignHashResponse, error)
	SignTx(ctx context.Context, in *SignTxRequest, opts ...grpc.CallOption) (*SignTxResponse, error)
	SignHashWithPassphrase(ctx context.Context, in *SignHashWithPassphraseRequest, opts ...grpc.CallOption) (*SignHashResponse, error)
	SignTxWithPassphrase(ctx context.Context, in *SignTxWithPassphraseRequest, opts ...grpc.CallOption) (*SignTxResponse, error)
}

type signerClient struct {
	cc *grpc.ClientConn
}

func NewSignerClient(cc *grpc.ClientConn) SignerClient {
	return &signerClient{cc}
}

func (c *signerClient) Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/proto.Signer/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signerClient) Open(ctx context.Context, in *OpenRequest, opts ...grpc.CallOption) (*OpenResponse, error) {
	out := new(OpenResponse)
	err := c.cc.Invoke(ctx, "/proto.Signer/Open", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signerClient) Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseResponse, error) {
	out := new(CloseResponse)
	err := c.cc.Invoke(ctx, "/proto.Signer/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signerClient) Accounts(ctx context.Context, in *AccountsRequest, opts ...grpc.CallOption) (*AccountsResponse, error) {
	out := new(AccountsResponse)
	err := c.cc.Invoke(ctx, "/proto.Signer/Accounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signerClient) Contains(ctx context.Context, in *ContainsRequest, opts ...grpc.CallOption) (*ContainsResponse, error) {
	out := new(ContainsResponse)
	err := c.cc.Invoke(ctx, "/proto.Signer/Contains", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signerClient) SignHash(ctx context.Context, in *SignHashRequest, opts ...grpc.CallOption) (*SignHashResponse, error) {
	out := new(SignHashResponse)
	err := c.cc.Invoke(ctx, "/proto.Signer/SignHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signerClient) SignTx(ctx context.Context, in *SignTxRequest, opts ...grpc.CallOption) (*SignTxResponse, error) {
	out := new(SignTxResponse)
	err := c.cc.Invoke(ctx, "/proto.Signer/SignTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signerClient) SignHashWithPassphrase(ctx context.Context, in *SignHashWithPassphraseRequest, opts ...grpc.CallOption) (*SignHashResponse, error) {
	out := new(SignHashResponse)
	err := c.cc.Invoke(ctx, "/proto.Signer/SignHashWithPassphrase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signerClient) SignTxWithPassphrase(ctx context.Context, in *SignTxWithPassphraseRequest, opts ...grpc.CallOption) (*SignTxResponse, error) {
	out := new(SignTxResponse)
	err := c.cc.Invoke(ctx, "/proto.Signer/SignTxWithPassphrase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SignerServer is the server API for Signer service.
type SignerServer interface {
	Status(context.Context, *StatusRequest) (*StatusResponse, error)
	Open(context.Context, *OpenRequest) (*OpenResponse, error)
	Close(context.Context, *CloseRequest) (*CloseResponse, error)
	Accounts(context.Context, *AccountsRequest) (*AccountsResponse, error)
	Contains(context.Context, *ContainsRequest) (*ContainsResponse, error)
	SignHash(context.Context, *SignHashRequest) (*SignHashResponse, error)
	SignTx(context.Context, *SignTxRequest) (*SignTxResponse, error)
	SignHashWithPassphrase(context.Context, *SignHashWithPassphraseRequest) (*SignHashResponse, error)
	SignTxWithPassphrase(context.Context, *SignTxWithPassphraseRequest) (*SignTxResponse, error)
}

// UnimplementedSignerServer can be embedded to have forward compatible implementations.
type UnimplementedSignerServer struct {
}

func (*UnimplementedSignerServer) Status(ctx context.Context, req *StatusRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Status not implemented")
}
func (*UnimplementedSignerServer) Open(ctx context.Context, req *OpenRequest) (*OpenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Open not implemented")
}
func (*UnimplementedSignerServer) Close(ctx context.Context, req *CloseRequest) (*CloseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Close not implemented")
}
func (*UnimplementedSignerServer) Accounts(ctx context.Context, req *AccountsRequest) (*AccountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Accounts not implemented")
}
func (*UnimplementedSignerServer) Contains(ctx context.Context, req *ContainsRequest) (*ContainsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contains not implemented")
}
func (*UnimplementedSignerServer) SignHash(ctx context.Context, req *SignHashRequest) (*SignHashResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignHash not implemented")
}
func (*UnimplementedSignerServer) SignTx(ctx context.Context, req *SignTxRequest) (*SignTxResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignTx not implemented")
}
func (*UnimplementedSignerServer) SignHashWithPassphrase(ctx context.Context, req *SignHashWithPassphraseRequest) (*SignHashResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignHashWithPassphrase not implemented")
}
func (*UnimplementedSignerServer) SignTxWithPassphrase(ctx context.Context, req *SignTxWithPassphraseRequest) (*SignTxResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignTxWithPassphrase not implemented")
}

func RegisterSignerServer(s *grpc.Server, srv SignerServer) {
	s.RegisterService(&_Signer_serviceDesc, srv)
}

func _Signer_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignerServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Signer/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignerServer).Status(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Signer_Open_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignerServer).Open(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Signer/Open",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignerServer).Open(ctx, req.(*OpenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Signer_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignerServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Signer/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignerServer).Close(ctx, req.(*CloseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Signer_Accounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignerServer).Accounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Signer/Accounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignerServer).Accounts(ctx, req.(*AccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Signer_Contains_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignerServer).Contains(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Signer/Contains",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignerServer).Contains(ctx, req.(*ContainsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Signer_SignHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignerServer).SignHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Signer/SignHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignerServer).SignHash(ctx, req.(*SignHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Signer_SignTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignTxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignerServer).SignTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Signer/SignTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignerServer).SignTx(ctx, req.(*SignTxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Signer_SignHashWithPassphrase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignHashWithPassphraseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignerServer).SignHashWithPassphrase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Signer/SignHashWithPassphrase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignerServer).SignHashWithPassphrase(ctx, req.(*SignHashWithPassphraseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Signer_SignTxWithPassphrase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignTxWithPassphraseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignerServer).SignTxWithPassphrase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Signer/SignTxWithPassphrase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignerServer).SignTxWithPassphrase(ctx, req.(*SignTxWithPassphraseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Signer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Signer",
	HandlerType: (*SignerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Status",
			Handler:    _Signer_Status_Handler,
		},
		{
			MethodName: "Open",
			Handler:    _Signer_Open_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _Signer_Close_Handler,
		},
		{
			MethodName: "Accounts",
			Handler:    _Signer_Accounts_Handler,
		},
		{
			MethodName: "Contains",
			Handler:    _Signer_Contains_Handler,
		},
		{
			MethodName: "SignHash",
			Handler:    _Signer_SignHash_Handler,
		},
		{
			MethodName: "SignTx",
			Handler:    _Signer_SignTx_Handler,
		},
		{
			MethodName: "SignHashWithPassphrase",
			Handler:    _Signer_SignHashWithPassphrase_Handler,
		},
		{
			MethodName: "SignTxWithPassphrase",
			Handler:    _Signer_SignTxWithPassphrase_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "signer.proto",
}
